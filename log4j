1.
if you want to log the entries, make sure user custom log is on

GUI:
System - Auditing - Change Auditing Syslog/nslog Setting and enable User Configurable Log Messages

CLI:
set audit syslogparams -userdefinedAuditlog YES
set audit nslogparams -userdefinedAuditlog YES


2.
the regex I built and refined through the course of yesterday
((\${)((\${)?((upper|lower|(env)?:.*:.*})?[jJlLnNdDiIaApPsSmMrRoOhH}:]*))+)//
Gunthers regex:
\$\{+?(.*?:|.*?:.*-)?[jJlLnNdDiIaApPsSmMrRoOhH}:]*// 


3. the responder and log policies
#Citrix policies from the blog
add policy patset patset_cve_2021_44228
bind policy patset patset_cve_2021_44228 ldap
bind policy patset patset_cve_2021_44228 http
bind policy patset patset_cve_2021_44228 https
bind policy patset patset_cve_2021_44228 ldaps
bind policy patset patset_cve_2021_44228 rmi
bind policy patset patset_cve_2021_44228 dns
add responder policy mitigate_cve_2021_44228 q^HTTP.REQ.FULL_HEADER.SET_TEXT_MODE(URLENCODED).DECODE_USING_TEXT_MODE.AFTER_STR("${").BEFORE_STR("}").CONTAINS("${") || HTTP.REQ.FULL_HEADER.SET_TEXT_MODE(URLENCODED).DECODE_USING_TEXT_MODE.SET_TEXT_MODE(IGNORECASE).STRIP_CHARS("${: }/+").AFTER_STR("jndi").CONTAINS_ANY("patset_cve_2021_44228") || HTTP.REQ.BODY(8192).SET_TEXT_MODE(URLENCODED).DECODE_USING_TEXT_MODE.AFTER_STR("${").BEFORE_STR("}").CONTAINS("${") || HTTP.REQ.BODY(8192).SET_TEXT_MODE(URLENCODED).DECODE_USING_TEXT_MODE. SET_TEXT_MODE(IGNORECASE).STRIP_CHARS("${: }/+").AFTER_STR("jndi").CONTAINS_ANY("patset_cve_2021_44228")^ DROP


#Original responder policies with regex from Eric
add audit messageaction Log4Shell_URL_log ALERT "\"Log4Shell  cve-2021-44228 URL match - Client IP=\"+ CLIENT.IP.SRC + \"; REQ Host=\"+ HTTP.REQ.HOSTNAME+ \"; REQ URL=\"+ HTTP.REQ.URL.DECODE_USING_TEXT_MODE + \" ; REQ HEADERS=\"+ HTTP.REQ.FULL_HEADER.DECODE_USING_TEXT_MODE" -logtoNewnslog YES
add audit messageaction Log4Shell_Headers_log ALERT "\"Log4Shell  cve-2021-44228 HEADER  match - Client IP=\"+ CLIENT.IP.SRC + \"; REQ Host=\"+ HTTP.REQ.HOSTNAME+ \"; REQ URL=\"+ HTTP.REQ.URL.DECODE_USING_TEXT_MODE + \" ; REQ HEADERS=\"+ HTTP.REQ.FULL_HEADER.DECODE_USING_TEXT_MODE" -logtoNewnslog YES

add responder policy GLOVR_RSP_POL_Log4Shell_Headers "HTTP.REQ.FULL_HEADER.DECODE_USING_TEXT_MODE.REGEX_MATCH(re#((\\${)((\\${)\?((upper|lower|(env)\?:.*:.*})\?[jJlLnNdDiIaApPsSmMrRoOhH}:]*))+)//#)" DROP -logAction Log4Shell_Headers_log
add responder policy GLOVR_RSP_POL_Log4Shell_URL "HTTP.REQ.URL.PATH_AND_QUERY.DECODE_USING_TEXT_MODE.REGEX_MATCH(re#((\\${)((\\${)\?((upper|lower|(env)\?:.*:.*})\?[jJlLnNdDiIaApPsSmMrRoOhH}:]*))+)//#)" DROP -logAction Log4Shell_URL_log

bind responder global GLOVR_RSP_POL_Log4Shell_Headers 100 END -type REQ_OVERRIDE
bind responder global GLOVR_RSP_POL_Log4Shell_URL 110 END -type REQ_OVERRIDE



#Policies with the regex from Gunther with logs from and binding from the original one
#Update 15/12: Only use one regex and remove citrix patset fix as it breaks too many legitimate flows (e.g. Exchange MAPI)

# UNINSTALL OLD - run only when you have installed the previous version
unbind responder global RSP_LOG4SHELL_COMBINED -type REQ_OVERRIDE -priority 100
unbind responder global RSP_LOG4SHELL_CTXPS -type REQ_OVERRIDE -priority 110

rm responder policy RSP_LOG4SHELL_COMBINED
rm responder policy RSP_LOG4SHELL_CTXPS

rm audit messageaction LOG_LOG4SHELL_COMBINED
rm audit messageaction LOG_LOG4SHELL_CTXPS

rm policy expression PE_LOG4SHELL_HEADER1
rm policy expression PE_LOG4SHELL_URL1
rm policy expression PE_LOG4SHELL_HEADER2
rm policy expression PE_LOG4SHELL_URL2
rm policy expression PE_LOG4SHELL_CTXPS

rm policy patset PS_CVE_2021_44228

## NEW - 15/12/2021
add audit messageaction LOG_LOG4SHELL ALERT "\"Log4Shell  CVE-2021-44228 match - Client IP=\" + CLIENT.IP.SRC + \"; REQ Host=\" + HTTP.REQ.HOSTNAME + \"; REQ URL=\" + HTTP.REQ.URL.DECODE_USING_TEXT_MODE + \" ; REQ HEADERS=\" + HTTP.REQ.FULL_HEADER.DECODE_USING_TEXT_MODE" -logtoNewnslog YES
add policy expression PE_LOG4SHELL_HEADER "HTTP.REQ.FULL_HEADER.DECODE_USING_TEXT_MODE.REGEX_MATCH(re#\\${+\?(.*\?:|.*\?:.*-)\?[jJnNdDiI:][aAsSiImMpPtThHdDnNrRlL}:]*//#)"
add policy expression PE_LOG4SHELL_URL "HTTP.REQ.URL.PATH_AND_QUERY.DECODE_USING_TEXT_MODE.REGEX_MATCH(re#\\${+\?(.*\?:|.*\?:.*-)\?[jJnNdDiI:][aAsSiImMpPtThHdDnNrRlL}:]*//#)"
add policy expression PE_LOG4SHELL_BODY "HTTP.REQ.BODY(8192).SET_TEXT_MODE(URLENCODED).DECODE_USING_TEXT_MODE.REGEX_MATCH(re#\\${+\?(.*\?:|.*\?:.*-)\?[jJnNdDiI:][aAsSiImMpPtThHdDnNrRlL}:]*//#)"
add responder policy RSP_LOG4SHELL "PE_LOG4SHELL_HEADER || PE_LOG4SHELL_URL || PE_LOG4SHELL_BODY" DROP -logAction LOG_LOG4SHELL
bind responder global RSP_LOG4SHELL 100 END -type REQ_OVERRIDE
